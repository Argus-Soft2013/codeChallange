//
//  CCFetchResult.m
//  codeChallange
//
//  Created by DeMoN on 5/26/16.
//  Copyright Â© 2016 Argus Soft. All rights reserved.
//

#import "CCFetchResult.h"

#define MIU_DICTIONARY_SET_POINTER_PROPERTY(dictionary, property)\
if ([self property] != nil)\
{\
[dictionary setObject:[self property] forKey:NSStringFromSelector(@selector(property))];\
}

@interface CCFetchResult ()

@property(nonatomic, strong, readwrite) NSArray *items;

@end

@implementation CCFetchResult

- (instancetype)init
{
    return [self initWithItems:nil];
}

- (instancetype)initWithItems:(NSArray *)theItems
{
    self = [super init];
    
    if (self != nil)
    {
        _items = theItems;
    }
    
    return self;
}

#pragma mark - Autogenerated

// generated
- (id)copyWithZone:(NSZone *)theZone
{
    CCFetchResult *copy = [[[self class] alloc] init];
    
    if (copy)
    {
        [copy setItems:[[self items] copy]];
    }
    
    return copy;
}

// generated
- (void)encodeWithCoder:(NSCoder *)theCoder
{
    NSMutableDictionary *dictionaryForEncoding = [NSMutableDictionary dictionary];
    
    MIU_DICTIONARY_SET_POINTER_PROPERTY(dictionaryForEncoding, items);
    
    [theCoder encodeObject:dictionaryForEncoding forKey:NSStringFromClass([CCFetchResult class])];
}

// generated
- (id)initWithCoder:(NSCoder *)theDecoder
{
    self = [super init];
    
    if (self)
    {
        NSDictionary *dictionaryForDecoding = [theDecoder decodeObjectForKey:NSStringFromClass([self class])];
        
        [self setItems:dictionaryForDecoding[NSStringFromSelector(@selector(items))]];
    }
    
    return self;
}

// generated
- (BOOL)isEqual:(CCFetchResult *)theObject
{
    if (theObject == self)
    {
        return YES;
    }
    
    if ([self class] != [theObject class])
    {
        return NO;
    }
    
    if ([self items] != [theObject items] && ![[self items] isEqualToArray:[theObject items]])
    {
        return NO;
    }
    
    return YES;
}

// generated
- (NSString *)description
{
    NSMutableString *description = [NSMutableString new];
    
    [description appendString:[NSString stringWithFormat:@"items - %@ \n", [self items]]];
    
    return description;
}

// generated
- (NSUInteger)hash
{
    return [[self items] hash];
}

@end
